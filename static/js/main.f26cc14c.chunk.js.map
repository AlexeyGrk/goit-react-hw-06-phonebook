{"version":3,"sources":["redux/slice/contactSlice.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/FilterForm/FilterForm.styled.jsx","components/FilterForm/FilterForm.jsx","components/Phonebook/Phonebook.styled.jsx","components/Phonebook/Phonebook.jsx","App.js","redux/store/index.js","index.js"],"names":["contactSlice","createSlice","name","initialState","items","filter","reducers","addContacts","state","action","push","payload","deleteContactsAction","contact","id","changeFilter","actions","ContactFromContainer","ContactMainForm","ContactFormNameLabel","ContactFromNameInput","ContactFormNumberLabel","ContactFromNumberInput","ContactFromMainButton","ContactFromTitle","ContactForm","handleAddContact","nameValue","numberValue","handleChange","idFormInputName","uuidv4","idFormInputNumber","onSubmit","htmlFor","type","pattern","title","required","value","onChange","ContactCtalog","ContactListItem","ContactListDeleteButton","ContactList","deleteContact","contacts","useSelector","filterState","number","toLowerCase","includes","map","onClick","FilterInput","FilterForm","handleNameFilter","memo","SectionContainer","PhonebookMainTitle","PhonebookSecondaryTitle","ContactsAndFilterContainer","ContainerPhonebookWithoutMainTitle","Phonebook","dispatch","useDispatch","useLocalStorage","key","defaultValue","useState","JSON","parse","localStorage","getItem","setState","useEffect","setItem","stringify","setName","setNumber","e","preventDefault","some","toast","error","success","target","length","contactId","position","toastOptions","iconTheme","primary","secondary","App","className","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f26cc14c.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  items: [],\n  filter: \"\",\n};\nexport const contactSlice = createSlice({\n  name: \"contacts\",\n  initialState,\n  reducers: {\n    addContacts: (state, action) => {\n      state.items.push(action.payload);\n    },\n    deleteContactsAction: (state, action) => {\n      state.items = state.items.filter(\n        (contact) => contact.id !== action.payload\n      );\n    },\n    changeFilter: (state, action) => {\n      state.filter = action.payload;\n    },\n  },\n});\nexport const { addContacts, deleteContactsAction, changeFilter } =\n  contactSlice.actions;\nexport default contactSlice.reducer;\n","import styled from \"@emotion/styled/macro\";\nexport const ContactFromContainer = styled.div`\n  display: inline-flex;\n  flex-direction: column;\n`;\nexport const ContactMainForm = styled.form`\n  display: inline-flex;\n  flex-direction: column;\n  align-items: center;\n  border: 1px dashed tomato;\n  padding: 10px;\n  margin: 10px;\n`;\nexport const ContactFormNameLabel = styled.label``;\nexport const ContactFromNameInput = styled.input`\n  caret-color: tomato;\n  margin: 10px;\n`;\nexport const ContactFormNumberLabel = styled.label``;\nexport const ContactFromNumberInput = styled.input`\n  caret-color: tomato;\n  margin: 10px;\n`;\nexport const ContactFromMainButton = styled.button``;\nexport const ContactFromTitle = styled.h2`\n  color: tomato;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import { v4 as uuidv4 } from \"uuid\";\nimport {\n  ContactFromContainer,\n  ContactMainForm,\n  ContactFormNameLabel,\n  ContactFromNameInput,\n  ContactFormNumberLabel,\n  ContactFromNumberInput,\n  ContactFromMainButton,\n  ContactFromTitle,\n} from \"./ContactForm.styled\";\n\nconst ContactForm = ({\n  handleAddContact,\n  nameValue,\n  numberValue,\n  handleChange,\n}) => {\n  const idFormInputName = uuidv4();\n  const idFormInputNumber = uuidv4();\n\n  return (\n    <ContactFromContainer>\n      <ContactFromTitle>Add contact</ContactFromTitle>\n      <ContactMainForm onSubmit={handleAddContact}>\n        <ContactFormNameLabel htmlFor={idFormInputName}>\n          Name\n        </ContactFormNameLabel>\n        <ContactFromNameInput\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={nameValue}\n          onChange={handleChange}\n          id={idFormInputName}\n        />\n\n        <ContactFormNumberLabel htmlFor={idFormInputNumber}>\n          Number\n        </ContactFormNumberLabel>\n        <ContactFromNumberInput\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={numberValue}\n          id={idFormInputNumber}\n          onChange={handleChange}\n        />\n        <ContactFromMainButton type=\"submit\">Add contact</ContactFromMainButton>\n      </ContactMainForm>\n    </ContactFromContainer>\n  );\n};\n\nexport default ContactForm;\n","import styled from \"@emotion/styled/macro\";\n\nexport const ContactCtalog = styled.ul`\n  padding: 5px;\n`;\nexport const ContactListItem = styled.li`\n  width: 300px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px;\n  border: 1px solid black;\n\n  &:not(:last-child) {\n    margin-bottom: 5px;\n  }\n`;\nexport const ContactListDeleteButton = styled.button`\n  margin: 0 5px;\n`;\n","import { useSelector } from \"react-redux\";\nimport {\n  ContactCtalog,\n  ContactListItem,\n  ContactListDeleteButton,\n} from \"./ContactList.styled\";\n\nconst ContactList = ({ deleteContact }) => {\n  const contacts = useSelector((state) => state.contacts.items);\n  const filterState = useSelector((state) => state.contacts.filter);\n\n  return (\n    <ContactCtalog>\n      {contacts\n        .filter(\n          (contacts) =>\n            filterState === \"\" ||\n            contacts.number.toLowerCase().includes(filterState.toLowerCase()) ||\n            contacts.name.toLowerCase().includes(filterState.toLowerCase())\n        )\n        .map(({ id, name, number }) => {\n          return (\n            <ContactListItem key={id}>\n              {name} : {number}\n              <ContactListDeleteButton onClick={() => deleteContact(id)}>\n                x\n              </ContactListDeleteButton>\n            </ContactListItem>\n          );\n        })}\n    </ContactCtalog>\n  );\n};\n\nexport default ContactList;\n","import styled from \"@emotion/styled/macro\";\nexport const FilterInput = styled.input`\n  caret-color: tomato;\n`;\n","import { memo } from \"react\";\nimport { FilterInput } from \"./FilterForm.styled\";\n\nconst FilterForm = ({ handleNameFilter }) => {\n  return <FilterInput onChange={handleNameFilter} type=\"text\" />;\n};\n\nexport default memo(FilterForm);\n","import styled from \"@emotion/styled/macro\";\n\nexport const SectionContainer = styled.section``;\n\nexport const PhonebookMainTitle = styled.h1`\n  display: flex;\n  justify-content: center;\n\n  color: tomato;\n`;\nexport const PhonebookSecondaryTitle = styled.h2`\n  color: tomato;\n`;\nexport const ContactsAndFilterContainer = styled.div`\n  display: inline-flex;\n  align-items: center;\n  flex-direction: column;\n`;\nexport const ContainerPhonebookWithoutMainTitle = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n`;\n","import { useState, useEffect } from \"react\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport {\n  addContacts,\n  deleteContactsAction,\n  changeFilter,\n} from \"../../redux/slice/contactSlice\";\nimport ContactForm from \"../ContactForm/ContactForm\";\nimport ContactList from \"../ContactList/ContactList\";\nimport FilterForm from \"../FilterForm/FilterForm\";\nimport {\n  PhonebookMainTitle,\n  PhonebookSecondaryTitle,\n  SectionContainer,\n  ContactsAndFilterContainer,\n  ContainerPhonebookWithoutMainTitle,\n} from \"./Phonebook.styled\";\n\nconst Phonebook = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector((state) => state.contacts.items);\n\n  const useLocalStorage = (key, defaultValue) => {\n    const [state, setState] = useState(() => {\n      return JSON.parse(localStorage.getItem(key)) ?? defaultValue;\n    });\n\n    useEffect(() => {\n      localStorage.setItem(key, JSON.stringify(state));\n    }, [key, state]);\n\n    return [state, setState];\n  };\n\n  const [name, setName] = useLocalStorage(\"name\", \"\");\n  const [number, setNumber] = useLocalStorage(\"number\", \"\");\n\n  // useEffect(() => {\n  //   const contactsParse = JSON.parse(localStorage.getItem(\"contacts\"));\n  //   if (contactsParse) {\n  //     setContacts(contactsParse);\n  //   }\n  // }, []);\n\n  // useEffect(() => {\n  //   localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  // }, [contacts]);\n  const handleChange = (e) => {\n    switch (e.target.name) {\n      case \"name\":\n        setName(e.target.value);\n        break;\n      case \"number\":\n        setNumber(e.target.value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleNameFilter = (e) => {\n    dispatch(changeFilter(e.target.value));\n  };\n  const deleteContact = (contactId) => {\n    dispatch(deleteContactsAction(contactId));\n    toast.error(\"Contact Deleted\");\n  };\n\n  const resetNameAndNumber = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n  const handleAddContact = (e) => {\n    const id = uuidv4();\n    e.preventDefault();\n    if (contacts.some((contact) => contact.name === name)) {\n      toast.error(\"Contact is already added in the phonebook\");\n      return;\n    } else {\n      dispatch(addContacts({ id: id, name, number }));\n      toast.success(\"Contact added\");\n      resetNameAndNumber();\n    }\n  };\n  return (\n    <SectionContainer>\n      <PhonebookMainTitle>Phonebook</PhonebookMainTitle>\n      <ContainerPhonebookWithoutMainTitle>\n        <ContactForm\n          handleAddContact={handleAddContact}\n          handleChange={handleChange}\n          nameValue={name}\n          numberValue={number}\n        />\n\n        <ContactsAndFilterContainer>\n          <PhonebookSecondaryTitle>Contacts</PhonebookSecondaryTitle>\n          <FilterForm handleNameFilter={handleNameFilter} />\n          {contacts.length > 0 ? (\n            <ContactList deleteContact={deleteContact} />\n          ) : (\n            <PhonebookSecondaryTitle>\n              Add please new contacts\n            </PhonebookSecondaryTitle>\n          )}\n        </ContactsAndFilterContainer>\n      </ContainerPhonebookWithoutMainTitle>\n      <Toaster\n        position={\"top-right\"}\n        toastOptions={{\n          error: {\n            iconTheme: {\n              primary: \"tomato\",\n              secondary: \"white\",\n            },\n          },\n        }}\n      />\n    </SectionContainer>\n  );\n};\n\nexport default Phonebook;\n","import \"./App.css\";\nimport Phonebook from \"./components/Phonebook/Phonebook\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Phonebook />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\n// import { createStore } from \"redux\";\n// import { devToolsEnhancer } from \"redux-devtools-extension\";\n// import { rootReducer } from \"../reducers\";\nimport contacts from \"../slice/contactSlice\";\n// export const store = createStore(rootReducer, devToolsEnhancer());\n\nexport const store = configureStore({\n  reducer: {\n    contacts,\n  },\n  devTools: process.env.NODE_ENV !== \"production\",\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store/index\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}